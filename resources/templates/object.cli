{[bggreen;fgwhite;bold]}object {{ $object->getClassName() }}{[reset]}
    {% foreach ($object->getParents() as $parent) %}
    {[bggreen;fgblack]}extends {{ $parent->isAbstract() ? 'abstract ' : '' }}{{ $parent->getName() }}{[reset]}
    {% end %}
{{}}
    {% foreach ($object->getInterfaces() as $interface) %}
    {[bggreen;fgblack]}implements {{ $interface->getName() }}{[reset]}
    {% end %}
{{}}
    {% foreach ($object->getTraits() as $trait) %}
    {[bggreen;fgblack]}use trait {{ $trait->getName() }}{[reset]}
    {% end %}
{{}}
    {% if ($object->hasConstants()) %}
    {[bgcyan;fgblack]} Constants {[reset]}
        {% foreach ($object->getConstants() as $name => $value) %}
        {{ str_pad($name, $object->getMaxLengthConstantNames()) }}: {{{ $value }}}
        {% end %}
    {% end %}
{{}}
    {% if ($object->hasProperties()) %}
    {[bgcyan;fgblack]} Properties {[reset]}
        {% foreach ($object->getProperties() as $property) %}
        {% if ($property['property']->isStatic()) %}
        {[fggreen]}static{[reset]} {{}}
        {[fgblue]}{{ str_pad($property['visibility'], $object->getMaxLengthPropertyVisibilities() - 7) }}{[reset]} {{}}
        {% else %}
        {[fgblue]}{{ str_pad($property['visibility'], $object->getMaxLengthPropertyVisibilities()) }}{[reset]} {{}}
        {% end %}
        ${{ $property['property']->getName() }}
        {% if (isset($property['defaultValue'])) %}
            Default : {{{ $property['defaultValue'] }}}
        {% end %}
            Current : {{{ $property['value'] }}}
        {% end %}
    {% end %}
{{}}
    {% if ($object->hasMethods()) %}
    {[bgcyan;fgblack]} Methods {[reset]}
        {% foreach ($object->getMethods() as $method) %}
        {% if ($method['method']->isStatic()) %}
        {[fggreen]}static{[reset]} {{}}
        {[fgblue]}{{ str_pad($method['visibility'], $object->getMaxLengthMethodVisibilities() - 7) }}{[reset]} {{}}
        {% else %}
        {[fgblue]}{{ str_pad($method['visibility'], $object->getMaxLengthMethodVisibilities()) }}{[reset]} {{}}
        {% end %}
        {{ $method['method']->getName() }}({{}}
        {% foreach ($method['arguments'] as $key => $argument) %}
        {% if ($argument['type'] && $argument['type'] !== 'constant') %}
        {[fgmagenta]}{{ $argument['type'] }}{[reset]} {{}}
        {% end %}
        {[fgmagenta;bold]}{{ $argument['reference'] }}{{ $argument['name'] }}{[reset]}{{}}
        {% if (array_key_exists('default', $argument)) %}
        {{ ' = ' }}{{}}
        {% if ($argument['type'] && $argument['type'] === 'constant') %}
        {[fgyellow]}{{ $argument['default'] }}{[reset]}{{}}
        {% else %}
        {{{ $argument['default'], FORMAT_SHORT }}}{{}}
        {% end %}
        {% end %}
        {% if ($key != count($method['arguments']) - 1) %}
        , {{}}
        {% end %}
        {% end %}
        )
        {% end %}
    {% end %}